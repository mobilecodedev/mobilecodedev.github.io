<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dart on Mobile Code</title>
    <link>https://mobilecode.dev/dart/</link>
    <description>Recent content in Dart on Mobile Code</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 28 Dec 2020 22:08:48 +0700</lastBuildDate>
    
	<atom:link href="https://mobilecode.dev/dart/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Dart RegExp by Examples</title>
      <link>https://mobilecode.dev/dart-regexp/</link>
      <pubDate>Mon, 28 Dec 2020 22:08:48 +0700</pubDate>
      
      <guid>https://mobilecode.dev/dart-regexp/</guid>
      <description>In this Dart tutorial, we learn how to use RegExp class to match Strings using regular expressions.
How to use firstMatch() method In the following example Dart program we use the firstMatch() method to search the first match of the regular expression in the given String. The return RegExpMatch object can be used to get the substring that matches by start and end properties. void main() { RegExp regExp = new RegExp(r&amp;#34;(\w+)&amp;#34;); String sampleString = &amp;#34;Dart programming language tutorials.</description>
    </item>
    
    <item>
      <title>Dart StringBuffer by Examples</title>
      <link>https://mobilecode.dev/dart-stringbuffer/</link>
      <pubDate>Mon, 28 Dec 2020 00:28:19 +0700</pubDate>
      
      <guid>https://mobilecode.dev/dart-stringbuffer/</guid>
      <description>In this Dart tutorial, we learn how to use StringBuffer class, a class for concatenating strings efficiently in Dart programming language.
How to use StringBuffer class to build a String In the following example Dart program we use StringBuffer to build a String by using write() method to add String content and then use toString() method to get the final String.
void main() { StringBuffer stringBuffer = new StringBuffer(); stringBuffer.</description>
    </item>
    
    <item>
      <title>Dart String Data Type by Examples</title>
      <link>https://mobilecode.dev/dart-string-data-type/</link>
      <pubDate>Sun, 27 Dec 2020 22:32:13 +0700</pubDate>
      
      <guid>https://mobilecode.dev/dart-string-data-type/</guid>
      <description>In this Dart tutorial, we learn how to use String in Dart programming language via different example Dart programs.
How to declare String variables in Dart Declare single line String with single quotes or double quotes. void main() { String str1 = &amp;#34;Hello MobileCode.Dev&amp;#34;; String str2 = &amp;#39;Hello MobileCode.Dev&amp;#39;; String str3 = &amp;#34;Hello &amp;#39;MobileCode.Dev&amp;#39;&amp;#34;; String str4 = &amp;#39;Hello &amp;#34;MobileCode.Dev&amp;#34;&amp;#39;; print(str1); print(str2); print(str3); print(str4); } The output is: Hello MobileCode.Dev Hello MobileCode.</description>
    </item>
    
    <item>
      <title>Dart bool Data Type by Examples</title>
      <link>https://mobilecode.dev/dart-bool-data-type/</link>
      <pubDate>Sun, 27 Dec 2020 16:06:23 +0700</pubDate>
      
      <guid>https://mobilecode.dev/dart-bool-data-type/</guid>
      <description>In this tutorial, we learn how to use bool data type in Dart programming language.
How to declare a bool variable in Dart Declare true value. void main() { bool value = true; if(value) { print(&amp;#34;value is true&amp;#34;); } else { print(&amp;#34;value is false&amp;#34;); } } The output is: value is true
Declare false value. void main() { bool value = false; if(value) { print(&amp;#34;value is true&amp;#34;); } else { print(&amp;#34;value is false&amp;#34;); } } The output is: value is false</description>
    </item>
    
    <item>
      <title>Dart double Data Type by Examples</title>
      <link>https://mobilecode.dev/dart-double-data-type/</link>
      <pubDate>Sun, 27 Dec 2020 14:53:54 +0700</pubDate>
      
      <guid>https://mobilecode.dev/dart-double-data-type/</guid>
      <description>In this tutorial, we learn how to use double-precision floating point number data type in Dart programming language.
How to declare double variables and basic operators in Dart void main() { double number1 = 10.5; double number2 = 5.5; double addResult = number1 + number2; double subtractResult = number1 - number2; double multuplyResult = number1 * number2; double divisionResult = number1 / number2; double moduloResult = number1 % number2; print(&amp;#34;10.</description>
    </item>
    
    <item>
      <title>Dart integer Data Type by Examples</title>
      <link>https://mobilecode.dev/dart-int-data-type/</link>
      <pubDate>Sat, 26 Dec 2020 23:20:05 +0700</pubDate>
      
      <guid>https://mobilecode.dev/dart-int-data-type/</guid>
      <description>In this tutorial, we learn how to use int data type in a Dart program.
How to define int variable and basic operator in Dart void main() { int number1 = 10; int number2 = 20; int addResult = number1 + number2; int subtractResult = number2 - number1; int multiplyResult = number1 * number2; double divisionResult = number2 / number1; int moduloResult = number2 % number1; print(&amp;#34;10 * 20 = &amp;#34; + addResult.</description>
    </item>
    
    <item>
      <title>Implement Hello World Program in Dart Programming Language</title>
      <link>https://mobilecode.dev/dart-hello-world/</link>
      <pubDate>Sat, 26 Dec 2020 12:43:07 +0700</pubDate>
      
      <guid>https://mobilecode.dev/dart-hello-world/</guid>
      <description>In this tutorial, we are going to learn step by step to create the first hello world program in Dart programming language.
Step 1 - Create Dart source code file Create a new file named helloworld.dart on your disk, the .dart file extension is specified for Dart source code files.
For example, we create new file at D:\Dart\helloworld.dart
Step 2 - Implement Hello World Application in Dart The Dart program entry point is the main() method so that we need to implement the main() method in our program.</description>
    </item>
    
  </channel>
</rss>